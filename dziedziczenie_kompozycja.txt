różnice:

-Dziedziczenie to zdolność klasy do dziedziczenia właściwości klasy nadrzędnej poprzez jej rozszerzenie,
 podczas gdy Kompozycja to zdolność klasy do zawierania obiektów różnych klas jako danych składowych.


Kiedy dziedziczenie, a kiedy kompozycja?

-Dziedziczenia użyjmy wtedy, gdy Jesteśmy pewni, że dziedziczenie powoduje powstanie klas będących podklasami klasy bazowe. Innymi słowy, klasa dziedzicząca jest wyspecjalizowaną wersją klasy bazowej.
-Dziedziczenie powinno dotyczyć sytuacji, gdy obydwie klasy (dziedzicząca i klasa matka) pochodzą z tej samej części logiki domeny.
-Jeżeli chcemy zmieniać wersję klasy w runtime, powinniśmy użyć kompozycji i wskazać Typ zmienianej klasy. W przypadku dziedziczenia musimy zdefiniować, którą klasę rozszerzamy i nie można tego zmienić w runtimie.
-Kompozycja pozwala na reużycie klasy oznaczonej jako final.
-Dzięki mock’owaniu klasy zbudowane na podstawie kompozycje są łatwo testowalne.
-Używanie dziedziczenia czasami może być niezbędne, jednak za każdym razem, gdy planujemy użyć tego podejścia, należy dobrze przemyśleć konsekwencje.